class Solution:
    def findMaxAverage(self, nums, k):
        # 首先判断下数组长度，如果是长度是1，那就不用算平均值了，肯定是第一个
        # 这里不用判断数组长度是不是0，题目说了长度会大于0，没说的话要判断下的
        if len(nums)==1:
            return nums[0]
        # 例子1 [1,12,-5,-6,50,3]  ，k=4 后面的都是用这个例子哈
        # 0-3 的平均值 ：（1+12-5-6）/4 ，1-4的平均值 ：（12-5-6+50）/4 ，2-5的平均值 ：（-5-6+50+3）/4  最大的是1-4的平均值(12-5-6+50)/4=12.75
        # 其实我们可以算和最大的，因为和最大，平均数也是最大的 ， avg=sum/k  sum是最大的，avg当然也是最大的，因为k是固定的

        # 我们先计算前 k个和  例子1 [1,12,-5,-6,50,3]  ，k=4  也就是0-3的和 sum=2
        sum=0
        # c# for(int i=0;i<k;i++)
        for i in range(k):
            sum+=nums[i]
        # maxS为最大值，默认第一个也就是0-3的和为最大值
        maxS=sum
        #看第8行 ，例子1 长度为6，k为4， 我们要计算3次的和的，也就是6-4+1 ，但是在14行的时候我们是计算过0-3的 ，所以我们还要循环6-4次
        # c# for（int i=0;i<nums.Lenght-k;i++）
        for i in range(len(nums)-k):
            # 例子1 [1,12,-5,-6,50,3]  ，k=4 ，当 i=0时，现在的sum 是 0-3的和 也就是 sum=1+12-5-6
            # 现在我们要通过 0-3 的和 计算 1-4的和  1-4和0-3相比是不是 可以先减去第0个数，然后再加上第4个数 也就是 sum-1+50
            sum=sum-nums[i]+nums[i+k]
            # 更新最大值
            maxS=max(maxS,sum)
        # 最后这里题目要的是平均值，我们把和除以k就行了
        return maxS/k
